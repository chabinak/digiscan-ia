Recorda
1- transformar en negativo
2- escala de grises.
3- tamaño 28x28.
4- aumentar el contraste.

[9:53, 12/2/2023] Tio Negro: Primero y principal.
Convertirla en una imagen en negativo.

[9:56, 12/2/2023] Tio Negro: Segundo. La imagen debe ser en escala de grises  y con un tamaño (28, 28, 1), esto es,
Debe tener un tamaño de 28 píxeles de ancho por 28 píxeles de alto. Además debe ser de 1 sólo canal (escala de grises).

[9:58, 12/2/2023] Tio Negro: Tercero. Debes dividir cada píxel entre 255 si lo toma como un entero o 255.0 si los píxeles 
están como punto flotante.

[9:59, 12/2/2023] Tio Negro: Por último, el cuarto paso. Debes elevar el contraste. Este es un paso importante que se ve ha 
tener que retocar mucho para que el modelo predica bien.

[10:03, 12/2/2023] Tio Negro: Me olvidaba. El modelo en tensorflow para computadoras la imagen que entra al modelo debe ser 
de orden (-1, 28, 28, 1), esto es, (imagen número tanto, altura píxel, ancho píxel, número de canales)

[10:03, 12/2/2023] Tio Negro: No se como será en tensorflow lite, que es para celulares y hemos realizado la conversión los 
otros días.

------------------

El desarrollo de DigiScan fue un proceso complejo que requiere conocimientos avanzados de programación, visión por computadora y aprendizaje automático. A continuación, se presenta una descripción general de los pasos necesarios para desarrollar una aplicación de este tipo:

Recopilación de datos: Es necesario contar con un conjunto de datos que contenga imágenes de números escritos a mano. Estos datos se utilizarán para entrenar un modelo de aprendizaje automático que reconozca los números. Existen varios conjuntos de datos públicos disponibles en línea, como MNIST o SVHN, que pueden ser utilizados para este fin.

Preprocesamiento de imágenes: Las imágenes deben ser preprocesadas antes de que se puedan utilizar para el entrenamiento del modelo. Esto incluye la eliminación de ruido, el ajuste de contraste y la normalización de las imágenes.

Entrenamiento de modelos: Una vez que se han recopilado y preprocesado los datos, se puede proceder con el entrenamiento de un modelo de aprendizaje automático. Los modelos de aprendizaje profundo, como las redes neuronales convolucionales (CNN), son especialmente efectivos para el reconocimiento de números escritos a mano.

Desarrollo de la aplicación: Una vez que se ha entrenado un modelo de reconocimiento de números, se puede proceder con el desarrollo de la aplicación. La aplicación debe ser capaz de tomar una foto como entrada, procesarla para obtener los números que se encuentran en la imagen y luego mostrar los resultados.

Evaluación y mejora: Es importante evaluar el rendimiento del modelo de reconocimiento de números y la aplicación en general para identificar áreas que necesiten mejoras. El modelo se puede evaluar utilizando conjuntos de datos de prueba y validación, mientras que la aplicación se puede evaluar utilizando pruebas de usuario y retroalimentación.

En resumen, el desarrollo de una aplicación que reconozca números mediante el ingreso de una foto es un proceso complejo que involucra varios pasos, desde la recopilación de datos hasta el desarrollo de la aplicación y la evaluación del rendimiento. Se requiere de un conocimiento avanzado de programación, visión por computadora y aprendizaje automático para crear una aplicación eficaz y precisa.